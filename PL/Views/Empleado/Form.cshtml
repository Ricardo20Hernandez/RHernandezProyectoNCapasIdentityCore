@model ML.Empleado
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md">
            <h1>Empleados</h1>
            <br />
        </div>
    </div>
    <div class="row">
        <div class="col-md">
            <h4>
                @ViewBag.Accion
            </h4>
            <br />
            <br />
        </div>
    </div>
    <div class="row">
        <div class="col-md">
            <form method="post" asp-controller="Empleado" asp-action="Form" enctype="multipart/form-data">
                <div class="row">
                    <div class="col-md">
                        <label for="numeroEmpleado" class="visually-hidden"><i class="fas fa-user"></i>NumeroEmpleado: </label>
                        <input type="text" id="numeroEmpleado" name="numeroEmpleado" value="@Model.NumeroEmpleado" class="visually-hidden" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md">
                        <label for="rfc" class="mb-1"><i class="fas fa-user"></i>RFC: </label>
                        <input type="text" id="rfc" name="rfc" value="@Model.RFC" class="form-control" required onblur="return ValidarRFC('rfc','lblErrorRFC')" />
                        @* @Html.ValidationMessageFor(model => model.RFC,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorRFC"></label>
                    </div>
                    <div class="col-md">
                        <label for="nombre" class="mb-1"><i class="fas fa-user"></i>Nombre: </label>
                        <input type="text" id="nombre" name="nombre" value="@Model.Nombre" class="form-control" required onkeypress=" return SoloLetras(event,'lblErrorNombre')" />
                        @* @Html.ValidationMessageFor(model => model.Nombre,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorNombre"></label>
                    </div>
                    <div class="col-md">
                        <label for="apellidoPaterno" class="mb-1"><i class="fas fa-user"></i>Apellido Paterno: </label>
                        <input type="text" id="apellidoPaterno" name="apellidoPaterno" value="@Model.ApellidoPaterno" class="form-control" required onkeypress=" return SoloLetras(event,'lblErrorApellidoPaterno')" />
                        @* @Html.ValidationMessageFor(model => model.ApellidoPaterno,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorApellidoPaterno"></label>
                    </div>
                    <div class="col-md">
                        <label for="apellidoMaterno" class="mb-1"><i class="fas fa-user"></i>Apellido Materno: </label>
                        <input type="text" id="apellidoMaterno" name="apellidoMaterno" value="@Model.ApellidoMaterno" class="form-control" required onkeypress=" return SoloLetras(event,'lblErrorApellidoMaterno')" />
                        @* @Html.ValidationMessageFor(model => model.ApellidoMaterno,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorApellidoMaterno"></label>
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-md">
                        <label for="email" class="mb-1"><i class="fas fa-user"></i>Email: </label>
                        <input type="text" id="email" name="email" value="@Model.Email" class="form-control" required onblur="ValidarEmail()" />
                        @* @Html.ValidationMessageFor(model => model.Email,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorEmail"></label>
                    </div>
                    <div class="col-md">
                        <label for="telefono" class="mb-1"><i class="fas fa-user"></i>Telefono: </label>
                        <input type="text" id="telefono" name="telefono" value="@Model.Telefono" class="form-control" required onblur="ValidarTelefono('telefono','lblErrorTelefono')" />
                        @* @Html.ValidationMessageFor(model => model.Telefono,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorTelefono"></label>
                    </div>
                    <div class="col-md">
                        <label for="fechaNacimiento" class="mb-1"><i class="fas fa-user"></i>Fecha Nacimiento: </label>
                        <input type="text" id="datepicker" name="fechaNacimiento" value="@Model.FechaNacimiento" class="form-control" required />
                        @* @Html.ValidationMessageFor(model => model.FechaNacimiento,null,new { @style= "color:red;"}) *@
                    </div>
                    <div class="col-md">
                        <label for="nss" class="mb-1"><i class="fas fa-user"></i>NSS: </label>
                        <input type="text" id="nss" name="nss" value="@Model.NSS" class="form-control" required onblur="ValidarNSS('nss','lblErrorNSS')" />
                        @* @Html.ValidationMessageFor(model => model.NSS,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorNSS"></label>
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-md-3">
                        <label for="fechaIngreso" class="mb-1"><i class="fas fa-user"></i>Fecha Ingreso: </label>
                        <input type="text" id="datepickerDos" name="fechaIngreso" value="@Model.FechaIngreso" class="form-control" required />
                        @* @Html.ValidationMessageFor(model => model.FechaIngreso,null,new { @style= "color:red;"}) *@
                    </div>
                    <div class="col-md-5">
                        <label for="foto" class="mb-1"><i class="fas fa-user"></i>Foto: </label>
                        <br />
                        <input type="file" id="fuImagen" name="fuImagen" onchange="PreviewImagen(event)"/>
                        @if (Model.Foto == null)
                        {
                            <img src="https://png.pngtree.com/png-vector/20191009/ourmid/pngtree-user-icon-png-image_1796659.jpg" id="imgUsuario" style="width: 100px; height: 100px;" />
                        }
                        else
                        {
                            <img id="imgUsuario" src="data:image/png;base64,@Convert.ToBase64String(Model.Foto)" style="width: 100px; height: 100px;" />
                        }
                        @Html.HiddenFor(model => model.Foto)
                    </div>
                    <div class="col-md-3">
                        <label for="idEmpresa" class="mb-1"><i class="fas fa-user"></i>IdEmpresa: </label>
                        <input type="text" id="idEmpresa" name="idEmpresa" value="@Model.IdEmpresa" class="form-control" required onkeypress=" return SoloNumeros(event,'lblErrorIdEmpresa')" />
                        @* @Html.ValidationMessageFor(model => model.IdEmpresa,null,new { @style= "color:red;"}) *@
                        <label id="lblErrorIdEmpresa"></label>
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-md">
                        <input type="submit" class="btn btn-success" value="@ViewBag.Accion" />
                        <a class="btn btn-danger" asp-controller="Empleado" asp-action="GetAll"> Regresar</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">

@section scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#datepicker").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '1910:2023',
                maxDate: new Date()
            });
        });
        $(function () {
            $("#datepickerDos").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: '1910:2023',
                maxDate: new Date()
            });
        });
    </script>

    }

<script src="~/Scripts/jquery-3.4.1.js"></script>

<script type="text/javascript">
    function PreviewImagen(event) {
        var output = document.getElementById('imgUsuario');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src)
        }
    }

    function ValidarRFC(txtelement, controlId) {
        var rfc = $('#' + txtelement).val();
        var regex = /^(?=.*[A-Z])(?=.*\d)[A-Z\d]{13}$/;

        if (!regex.test(rfc)) {
            $('#' + controlId).text("RFC Invalido");
            $('#' + controlId).css({ color: "red" });
            return false;
        } else {
            $('#' + controlId).text("RFC Valido");
            $('#' + controlId).css({ color: "green" });
            return true;
        }
    }

    function SoloLetras(event, controlId) {
        var letra = event.key;
        var regexOnlyLetters = /^[a-zA-Z\s]+$/;

        if (regexOnlyLetters.test(letra)) {
            $('#' + controlId).text("");
            return true;
        } else {
            $('#' + controlId).text("Solo se aceptan letras");
            $('#' + controlId).css({ color: "red" });
            return false
        }
    }

    function SoloNumeros(event, controlId) {
        var numero = event.key;
        var regexOnlyNumbers = /^([0-9])*$/;

        if (regexOnlyNumbers.test(numero)) {
            $('#' + controlId).text("");
            return true;
        } else {
            $('#' + controlId).text("Solo se aceptan numeros");
            $('#' + controlId).css({ color: "red" });
            return false;
        }
    }

    function ValidarEmail() {
        var email = document.getElementById("email").value;
        var lblError = document.getElementById("lblErrorEmail");
        lblError.innerHTML = "";
        var regex = /^([a-zA-Z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

        if (!regex.test(email)) {
            lblError.innerHTML = "El correo no es valido";
            lblError.style.color = "red";
            return false
        } else {
            lblError.innerHTML = "El correo es valido";
            lblError.style.color = "green";
            return true;
        }
    }

    function ValidarTelefono(txtelement, controlId) {
        var telefono = $('#' + txtelement).val();
        var regex = /^\d{10}$/;

        if (!regex.test(telefono)) {
            $('#' + controlId).text("Numero Invalido");
            $('#' + controlId).css({ color: "red" });
            return false;
        } else {
            $('#' + controlId).text("Numero Valido");
            $('#' + controlId).css({ color: "green" });
            return true;
        }
    }

    function ValidarNSS(txtelement, controlId) {
        var nss = $('#' + txtelement).val();
        var regex = /^\d{11}$/;

        if (!regex.test(nss)) {
            $('#' + controlId).text("NSS Invalido");
            $('#' + controlId).css({ color: "red" });
            return false;
        } else {
            $('#' + controlId).text("NSS Valido");
            $('#' + controlId).css({ color: "green" });
            return true;
        }
    }

</script>